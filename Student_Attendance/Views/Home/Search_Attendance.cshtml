@{
    ViewData["Title"] = "Student Attendance Search";
    Layout = "_Layout";
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
<link rel="stylesheet" href="~/css/homesearch.css">

<div class="attendance-search-page">
    <div class="header">
        <h3>Student Attendance System</h3>
        <a href="/Account/Login" class="login-btn">
            <i class="fas fa-sign-in-alt"></i> Login
        </a>
    </div>

    <div class="main-content">
        <div id="searchSection">
            <div class="search-logo">
                <span>S</span><span>t</span><span>u</span><span>d</span><span>e</span><span>n</span><span>t</span>
            </div>

            <div class="search-container">
                <i class="fas fa-search search-icon"></i>
                <input type="text" id="studentSearch" class="search-box" placeholder="Search student by name..." autocomplete="off">
                <div id="studentDropdown" class="student-dropdown" style="display: none;"></div>
            </div>

            <div class="buttons-container">
                <button id="searchBtn" class="search-btn">Search Student</button>
            </div>
        </div>

        <div id="attendanceResults" class="search-results" style="display: none;"></div>
    </div>

    <div class="footer">
        <div class="footer-content">
            <img src="~/Images/favicon.png" alt="Logo">
            <span class="footer-text">Student Attendance System</span>
        </div>
    </div>
</div>

@section Scripts {
    <!-- Add Chart.js library -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    
    <script>
        $(document).ready(function() {
            let selectedStudentId = null;
            
            // Handle student search with debounce
            let searchTimeout;
            $('#studentSearch').on('input', function() {
                clearTimeout(searchTimeout);
                const searchTerm = $(this).val().trim();
                
                if (searchTerm.length < 3) {
                    $('#studentDropdown').hide();
                    return;
                }
                
                searchTimeout = setTimeout(function() {
                    $.ajax({
                        url: '/Home/SearchStudents',
                        type: 'GET',
                        data: { searchTerm: searchTerm },
                        success: function(data) {
                            if (data && data.length > 0) {
                                let html = '';
                                data.forEach(function(student) {
                                    html += '<div class="student-item" data-id="' + student.id + '">' +
                                        '<div class="student-name">' + student.name + '</div>' +
                                        '<div class="student-class">' + student.className + '</div>' +
                                    '</div>';
                                });
                                $('#studentDropdown').html(html).show();
                            } else {
                                $('#studentDropdown').html('<div class="student-item">No students found</div>').show();
                            }
                        },
                        error: function() {
                            $('#studentDropdown').html('<div class="student-item">Error searching students</div>').show();
                        }
                    });
                }, 300);
            });
            
            // Handle student selection
            $(document).on('click', '.student-item', function() {
                const id = $(this).data('id');
                if (!id) return;
                
                selectedStudentId = id;
                const name = $(this).find('.student-name').text();
                $('#studentSearch').val(name);
                $('#studentDropdown').hide();
            });
            
            // Handle search button click
            $('#searchBtn').on('click', function() {
                if (!selectedStudentId) {
                    alert('Please select a student from the dropdown');
                    return;
                }
                
                $.ajax({
                    url: '/Home/GetStudentAttendance',
                    type: 'GET',
                    data: { studentId: selectedStudentId },
                    success: function(data) {
                        if (data.success) {
                            // Hide search section
                            $('#searchSection').hide();
                            
                            // Format the attendance data with welcome message
                            let html = '<div class="student-info">' +
                                '<h3>' + data.studentName + '</h3>' +
                                '<p>Class: ' + data.className + '</p>' +
                                '<div class="welcome-message">Hi, ' + data.studentName + ', your overall attendance is ' + 
                                data.overallAttendance.toFixed(1) + '%.</div>' +
                                '</div>' +
                                '<div class="attendance-stats">' +
                                '<p>Attended ' + data.attendedClasses + ' out of ' + data.totalClasses + ' classes</p>' +
                                '<div class="progress">' +
                                '<div class="progress-bar ' + (data.overallAttendance < 75 ? 'bg-danger' : 'bg-success') + '" ' +
                                'role="progressbar" ' +
                                'style="width: ' + data.overallAttendance + '%" ' +
                                'aria-valuenow="' + data.overallAttendance + '" ' +
                                'aria-valuemin="0" ' +
                                'aria-valuemax="100"></div>' +
                                '</div>' +
                                '</div>';
                            
                            // Add charts container for better layout
                            html += '<div class="charts-container">';
                            
                            // Add Subject Comparison Chart
                            html += '<div class="chart-box comparison-chart">' +
                                '<h5>Subject Comparison</h5>' +
                                '<canvas id="subjectComparisonChart"></canvas>' +
                                '</div>';
                            
                            // Add Attendance Status Chart
                            html += '<div class="chart-box status-chart">' +
                                '<h5>Attendance Status</h5>' +
                                '<canvas id="attendanceStatusChart"></canvas>' +
                                '</div>';
                            
                            html += '</div>'; // Close charts-container
                            
                            // Add Weekly Attendance Heatmap if data exists
                            if(data.weeklyAttendance) {
                                html += '<div class="chart-box">' +
                                    '<h5>Weekly Attendance Pattern</h5>' +
                                    '<div class="weekly-heatmap">' +
                                    '<div class="row text-center">' +
                                    '<div class="col">Mon</div>' +
                                    '<div class="col">Tue</div>' +
                                    '<div class="col">Wed</div>' +
                                    '<div class="col">Thu</div>' +
                                    '<div class="col">Fri</div>' +
                                    '<div class="col">Sat</div>' +
                                    '</div>' +
                                    '<div class="row text-center">';
                                
                                ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].forEach(function(day) {
                                    const dayData = data.weeklyAttendance[day] || { present: 0, total: 0 };
                                    const percentage = dayData.total > 0 ? (dayData.present / dayData.total) * 100 : 0;
                                    let colorClass = 'bg-light';
                                    
                                    if(dayData.total > 0) {
                                        if(percentage >= 90) colorClass = 'bg-success';
                                        else if(percentage >= 75) colorClass = 'bg-info';
                                        else if(percentage >= 50) colorClass = 'bg-warning';
                                        else colorClass = 'bg-danger';
                                    }
                                    
                                    html += '<div class="col">' +
                                        '<div class="day-cell ' + colorClass + '" data-bs-toggle="tooltip" ' +
                                        'title="' + dayData.present + '/' + dayData.total + ' (' + percentage.toFixed(1) + '%)">' +
                                        percentage.toFixed(0) + '%' +
                                        '</div>' +
                                        '</div>';
                                });
                                
                                html += '</div></div></div>';
                            }
                            
                            // Add back to search button
                            html += '<button class="back-to-search" id="backToSearch">Back to Search</button>';
                            
                            $('#attendanceResults').html(html).show();
                            
                            // Initialize charts after DOM is updated
                            if(data.subjectAttendance && data.subjectAttendance.length > 0) {
                                const subjectCtx = document.getElementById('subjectComparisonChart').getContext('2d');
                                new Chart(subjectCtx, {
                                    type: 'bar',
                                    data: {
                                        labels: data.subjectAttendance.map(subject => subject.subjectName),
                                        datasets: [{
                                            label: 'Attendance %',
                                            data: data.subjectAttendance.map(subject => (subject.present/subject.total*100).toFixed(1)),
                                            backgroundColor: data.subjectAttendance.map(subject => 
                                                subject.present/subject.total*100 < 75 ? 'rgba(220, 53, 69, 0.7)' : 'rgba(40, 167, 69, 0.7)'
                                            ),
                                            borderColor: data.subjectAttendance.map(subject => 
                                                subject.present/subject.total*100 < 75 ? 'rgb(220, 53, 69)' : 'rgb(40, 167, 69)'
                                            ),
                                            borderWidth: 1
                                        }]
                                    },
                                    options: {
                                        responsive: true,
                                        maintainAspectRatio: true,
                                        scales: {
                                            y: {
                                                beginAtZero: true,
                                                max: 100,
                                                title: {
                                                    display: true,
                                                    text: 'Attendance %'
                                                }
                                            }
                                        },
                                        plugins: {
                                            tooltip: {
                                                callbacks: {
                                                    label: function(context) {
                                                        const subject = data.subjectAttendance[context.dataIndex];
                                                        return context.formattedValue + '% (' + subject.present + '/' + subject.total + ')';
                                                    }
                                                }
                                            }
                                        }
                                    }
                                });
                            }
                            
                            const statusCtx = document.getElementById('attendanceStatusChart').getContext('2d');
                            new Chart(statusCtx, {
                                type: 'doughnut',
                                data: {
                                    labels: ['Present', 'Absent'],
                                    datasets: [{
                                        data: [data.attendedClasses, data.totalClasses - data.attendedClasses],
                                        backgroundColor: ['rgba(40, 167, 69, 0.7)', 'rgba(220, 53, 69, 0.7)'],
                                        borderColor: ['rgb(40, 167, 69)', 'rgb(220, 53, 69)'],
                                        borderWidth: 1
                                    }]
                                },
                                options: {
                                    responsive: true,
                                    maintainAspectRatio: true,
                                    plugins: {
                                        tooltip: {
                                            callbacks: {
                                                label: function(context) {
                                                    const value = context.raw;
                                                    const total = data.totalClasses;
                                                    const percentage = ((value / total) * 100).toFixed(1);
                                                    return context.label + ': ' + value + ' (' + percentage + '%)';
                                                }
                                            }
                                        }
                                    }
                                }
                            });
                            
                            // Initialize tooltips
                            $('[data-bs-toggle="tooltip"]').tooltip();
                            
                            // Handle back to search button
                            $('#backToSearch').on('click', function() {
                                $('#attendanceResults').hide();
                                $('#searchSection').show();
                            });
                        } else {
                            alert('Error: ' + data.message);
                        }
                    },
                    error: function() {
                        alert('Error retrieving attendance data');
                    }
                });
            });
            
            // ... existing code ...

            // Close dropdown when clicking outside
            $(document).on('click', function(e) {
                if (!$(e.target).closest('.search-container').length) {
                    $('#studentDropdown').hide();
                }
            });
            
            // Handle Enter key press
            $('#studentSearch').on('keypress', function(e) {
                if (e.which === 13 && selectedStudentId) {
                    $('#searchBtn').click();
                }
            });
        });
    </script>
}