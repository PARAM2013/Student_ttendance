@model Student_Attendance.ViewModels.InstituteViewModel

@{
    ViewData["Title"] = "Edit Institute";
}

<div class="container-fluid">
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">Edit Institute</h3>
        </div>
        <div class="card-body">
            <form asp-action="Edit" enctype="multipart/form-data">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="Id" />
                <partial name="_Form" model="Model" />
                <div class="form-group mb-3">
                    <label asp-for="LogoFile" class="control-label">Logo</label>
                    <input asp-for="LogoFile" class="form-control" type="file" accept=".jpg,.jpeg,.png" onchange="validateFile(this)" />
                    <span asp-validation-for="LogoFile" class="text-danger"></span>
                    <div id="fileValidationMessage" class="text-danger"></div>
                    <small class="form-text text-muted">Leave empty to use default logo</small>
                </div>
                <div class="form-group mt-3">
                    <input type="submit" value="Save" class="btn btn-primary" />
                    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        function validateFile(input) {
            const file = input.files[0];
            const fileValidationMessage = document.getElementById('fileValidationMessage');
            
            if (file) {
                // Check file size (2MB = 2 * 1024 * 1024 bytes)
                if (file.size > 2 * 1024 * 1024) {
                    fileValidationMessage.textContent = 'File size cannot exceed 2MB';
                    input.value = '';
                    return;
                }

                // Check file type
                const allowedTypes = ['.jpg', '.jpeg', '.png'];
                const fileExtension = file.name.toLowerCase().substring(file.name.lastIndexOf('.'));
                if (!allowedTypes.includes(fileExtension)) {
                    fileValidationMessage.textContent = 'Only .jpg, .jpeg and .png files are allowed';
                    input.value = '';
                    return;
                }

                fileValidationMessage.textContent = '';
            }
        }
    </script>
}