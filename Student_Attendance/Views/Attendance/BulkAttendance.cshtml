@model BulkAttendanceViewModel
@{
    ViewData["Title"] = "Bulk Attendance";
}
<div class="container-fluid">
    <div class="card">
        <div class="card-header">
            <h3><i class="fas fa-calendar-alt me-2"></i>Bulk Attendance</h3>
        </div>
        <div class="card-body">
            <form id="bulkAttendanceForm" class="row g-3">
                @if(User.IsInRole("Admin"))
                {
                    <div class="col-md-3">
                        <label class="form-label">Teacher</label>
                        <select id="TeacherId" name="TeacherId" class="form-select">
                            <option value="">Select Teacher</option>
                            @foreach(var teacher in Model.Teachers)
                            {
                                <option value="@teacher.Value">@teacher.Text</option>
                            }
                        </select>
                    </div>
                }
                else
                {
                    <div class="col-md-3">
                        <label class="form-label">Teacher</label>
                        <input type="text" class="form-control" value="@User.Identity.Name" readonly />
                    </div>
                }
                <div class="col-md-3">
                    <label class="form-label">Subject</label>
                    <select id="SubjectId" name="SubjectId" class="form-select">
                        <option value="">Select Subject</option>
                        <!-- Populate teacher-wise allocated subjects via JS on TeacherId change -->
                    </select>
                </div>
                <div class="col-md-3">
                    <label class="form-label">Division</label>
                    <select id="DivisionId" name="DivisionId" class="form-select">
                        <option value="">Select Division</option>
                        @foreach(var div in Model.Divisions)
                        {
                            <option value="@div.Value">@div.Text</option>
                        }
                    </select>
                </div>
                <div class="col-md-2">
                    <label class="form-label">Month</label>
                    <select id="Month" name="Month" class="form-select">
                        @for (int m = 1; m <= 12; m++)
                        {
                            <option value="@m">@System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(m)</option>
                        }
                    </select>
                </div>
                <div class="col-md-2">
                    <label class="form-label">Year</label>
                    <input type="number" id="Year" name="Year" class="form-control" value="@DateTime.Now.Year" />
                </div>
                <div class="col-md-2 d-flex align-items-end">
                    <button type="button" id="generateSheet" class="btn btn-primary w-100">
                        Generate Attendance Sheet
                    </button>
                </div>
            </form>
            <hr />
            <div id="attendanceGrid">
                <!-- Attendance grid will be loaded here -->
            </div>
            <div class="text-end mt-3">
                <button type="button" id="saveAttendance" class="btn btn-success" style="display:none">
                    Save Attendance
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
    $(document).ready(function(){
        // TODO: If role is Admin, load subjects on TeacherId change
        $('#TeacherId').change(function(){
             var teacherId = $(this).val();
             if(teacherId){
                 $.get('/Attendance/GetTeacherSubjects', { teacherId: teacherId })
                  .done(function(response){
                     var options = '<option value="">Select Subject</option>';
                     $.each(response, function(i, subj){
                         options += '<option value="' + subj.id + '">' + subj.name + '</option>';
                     });
                     $('#SubjectId').html(options);
                  });
             }
        });

        $('#generateSheet').click(function(){
            var teacherId = $('#TeacherId').val() || 0;
            var subjectId = $('#SubjectId').val();
            var divisionId = $('#DivisionId').val();
            var month = $('#Month').val();
            var year = $('#Year').val();
            if(!subjectId || !divisionId){
                Swal.fire({title:'Warning', text:'Please select subject and division.', icon:'warning'});
                return;
            }
            $('#attendanceGrid').html('<div class="text-center"><i class="fas fa-spinner fa-spin"></i> Loading...</div>');
            $.get('/Attendance/GetBulkAttendanceSheet', { teacherId: teacherId, subjectId: subjectId, divisionId: divisionId, month: month, year: year })
             .done(function(data){
                $('#attendanceGrid').html(data);
                $('#saveAttendance').show();
             });
        });

        // Save attendance
        $('#saveAttendance').click(function(){
            // Gather attendance data from grid checkboxes.
            var attendanceData = {};
            $('#bulkGrid tbody tr').each(function(){
                var studentId = $(this).data('student-id');
                attendanceData[studentId] = {};
                $(this).find('td.dateCol').each(function(){
                    var date = $(this).data('date'); 
                    var isPresent = $(this).find('input.attendanceChk').is(':checked');
                    attendanceData[studentId][date] = isPresent;
                });
            });
            var payload = {
                SubjectId: parseInt($('#SubjectId').val()),
                Month: parseInt($('#Month').val()),
                Year: parseInt($('#Year').val()),
                AttendanceData: attendanceData
            };
            $.ajax({
                url: '/Attendance/SaveBulkAttendance',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(payload),
                success: function(res){
                     Swal.fire({title:'Success', text: res.message, icon:'success'});
                },
                error: function(){
                     Swal.fire({title:'Error', text:'Failed to save attendance', icon:'error'});
                }
            });
        });
    });
    </script>
}
